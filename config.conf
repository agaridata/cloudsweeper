#######################################################################
#                Configuration of Cloudsweeper                        #
#######################################################################

######################### Generic configs #############################
# CS_CSP defines which CSP to run against. Can be either
# 'aws' or 'gcp. Can be overridden using the '--csp' flag.
CS_CSP: aws
# CS_ORG_FILE defines the location of the organization
# definition file. This can be any local path on the machine.
CS_ORG_FILE: organization.json
# CS_WARNING_HOURS defines when Cloudsweeper will start warning
# about resource cleanup. If there is less than the specified amount
# of hours left before a resource will be cleaned up, then an
# email will be sent. Because of how this works, it is important to
# run Cloudsweeper often enough so that a warning can be sent out.
# Preferably once every day.
CS_WARNING_HOURS: 48

########################## Billing configs ############################
# CS_BILLING_ACCOUNT defines the AWS account ID where the
# billing report CSV is located.
CS_BILLING_ACCOUNT: foo
# CS_BILLING_BUCKET_NAME defines the name/id of the bucket where the
# billing report file will be located.
CS_BILLING_BUCKET_NAME: foo
# CS_BILLING_BUCKET_REGION defines the AWS region where the bucket
# specified by CS_BILLING_BUCKET_NAME is located.
CS_BILLING_BUCKET_REGION: us-west-2
# CS_BILLING_CSV_PREFIX defines the prefix of the billing report
# file in GCP. This prefix will be appended with the date and
# .csv file endding (e.g. <PREFIX>-2018-10-09.csv).
CS_BILLING_CSV_PREFIX: foo
# CS_BILLING_SORT_TAG defines a tag in the AWS billing report CSV to
# sort on. If this is left empty, sorting is done based on users.
CS_BILLING_SORT_TAG:

########################### SMTP configs ##############################
# CS_SMTP_USER defines the username used when authenticating with
# the SMTP server to send mail. If using Gmail, this would be
# the full email, e.g. example@gmail.com.
CS_SMTP_USER: example@gmail.com
# CS_SMTP_PASSWORD defines the password used when authenticating with
# the SMTP server to send mail.
CS_SMTP_PASSWORD: password
# CS_SMTP_SERVER defines the server that will be used for sending
# email.
CS_SMTP_SERVER: smtp.gmail.com
# CS_SMTP_PORT defines the port that will be used when connecting
# to the SMTP server.
CS_SMTP_PORT: 587

####################### Notification configs ##########################
# CS_DISPLAY_NAME defines the name that will be shown as sender in the
# mails sent by Cloudsweeper.
CS_DISPLAY_NAME: Cloudsweeper
# CS_MAIL_FROM defines the email address that will be shown as sender in the
# mails sent by Cloudsweeper. This is often the same as CS_SMTP_USER
CS_MAIL_FROM: example@gmail.com
# CS_EMAIL_DOMAIN defines the domain used for email in your company. It
# will be appended to the employee username like "<username>@<domain>".
# If you have an employee which has a different domain name than the
# rest, you add it as an exception in the emailEdgeCases map within
# "cloudsweeper/notify/helpers.go".
CS_EMAIL_DOMAIN: example.com
# CS_BILLING_REPORT_ADDRESSEE defines an employee/alias where the billing report
# should be sent. This could perhaps be a common engineering email that
# all engineers recieve.
# e.g 'engineering' - then the full email address will be engineering@<CS_EMAIL_DOMAIN>
CS_BILLING_REPORT_ADDRESSEE: engineering
# CS_TOTAL_SUM_ADDRESSEE defines an employee/alias that should
# get a total summary of all resources. This person is probably
# the one responsible for cost management within your company.
# e.g 'cogs' - then the full email address will be cogs@<CS_EMAIL_DOMAIN>
CS_TOTAL_SUM_ADDRESSEE: cogs

########################## Setup configs ##############################
# CS_MASTER_ARN defines the ARN of the AWS IAM user within an account
# that is used by the master machine, as descibed in Instructions.md.
CS_MASTER_ARN: arn:aws:iam::123456789123:user/cloudsweeper-master


########################## Thresholds ##############################
# CLEAN_UNTAGGED_OLDER_THAN_DAYS defines the number of days before an untagged instance is cleaned up
# CLEAN_UNTAGGED_OLDER_THAN_DAYS: 30
# CLEAN_INSTANCES_OLDER_THAN_DAYS defines the number of days before an instance is cleaned up
# CLEAN_INSTANCES_OLDER_THAN_DAYS: 180
# CLEAN_IMAGES_OLDER_THAN_DAYS defines the number of days before an instance is cleaned up
# CLEAN_IMAGES_OLDER_THAN_DAYS: 180
# CLEAN_SNAPSHOTS_OLDER_THAN_DAYS defines the number of days before an instance is cleaned up
# CLEAN_SNAPSHOTS_OLDER_THAN_DAYS: 180
# CLEAN_UNATTATCHED_OLDER_THAN_DAYS defines the number of days before an unattached volume is cleaned up
# CLEAN_UNATTATCHED_OLDER_THAN_DAYS: 30
# CLEAN_BUCKET_NOT_MODIFIED_DAYS defines the number of days that an S3 bucket must be idle for before cleanup occours
# CLEAN_BUCKET_NOT_MODIFIED_DAYS: 182
# CLEAN_BUCKET_OLDER_THAN_DAYS defines the number of days than an S3 bucket must exist for before being cleaned up
# CLEAN_BUCKET_OLDER_THAN_DAYS: 7
# CLEAN_KEEP_N_COMPONENT_IMAGES defines the number of latest component images to clean. All but the N most recent will be cleanup up
# CLEAN_KEEP_N_COMPONENT_IMAGES: 2

# NOTIFY_INSTANCES_OLDER_THAN_DAYS defines the number of days before notifications are sent out for instances
# NOTIFY_INSTANCES_OLDER_THAN_DAYS: 30
# NOTIFY_IMAGES_OLDER_THAN_DAYS defines the number of days before notifications are sent out for images
# NOTIFY_IMAGES_OLDER_THAN_DAYS: 30
# NOTIFY_VOLUMES_OLDER_THAN_DAYS defines the number of days before notifications are sent out for volumes
# NOTIFY_VOLUMES_OLDER_THAN_DAYS: 30
# NOTIFY_SNAPSHOTS_OLDER_THAN_DAYS defines the number of days before notifications are sent out for snapshots
# NOTIFY_SNAPSHOTS_OLDER_THAN_DAYS: 30
# NOTIFY_BUCKETS_OLDER_THAN_DAYS defines the number of days before notifications are sent out for buckets
# NOTIFY_BUCKETS_OLDER_THAN_DAYS: 30
# NOTIFY_WHITELIST_OLDER_THAN_DAYS defines the number of days before notifications are sent out for whitelisted items
# NOTIFY_WHITELIST_OLDER_THAN_DAYS: 180
# NOTIFY_DND_OLDER_THAN_DAYS defines the number of days that a Do Not Destroy tag must exist for before sending out a notification
# NOTIFY_DND_OLDER_THAN_DAYS: 7
